name: Run ADF Pipeline - NEW

on:
  workflow_dispatch:

jobs:
  run-adf:
    runs-on: ubuntu-latest

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Trigger ADF Pipeline
        id: trigger_pipeline
        run: |
          run_id=$(az datafactory pipeline create-run \
            --factory-name ${{ secrets.ADF_NAME }} \
            --resource-group ${{ secrets.ADF_RESOURCE_GROUP }} \
            --name "pipeline1" \
            --query runId -o tsv)
          echo "run_id=$run_id"
          echo "run_id=$run_id" >> $GITHUB_OUTPUT

      - name: Wait for pipeline to complete
        id: wait_pipeline
        run: |
          run_id=${{ steps.trigger_pipeline.outputs.run_id }}
          status="InProgress"
          while [[ "$status" == "InProgress" || "$status" == "Queued" ]]; do
            echo "Pipeline run status: $status"
            sleep 15
            status=$(az datafactory pipeline-run show \
              --factory-name ${{ secrets.ADF_NAME }} \
              --resource-group ${{ secrets.ADF_RESOURCE_GROUP }} \
              --run-id $run_id \
              --query status -o tsv)
          done

          echo "Final pipeline run status: $status"
          if [[ "$status" != "Succeeded" ]]; then
            echo "Pipeline failed!"
            exit 1
          fi

          echo "run_id=$run_id" >> $GITHUB_OUTPUT

      - name: Get and print Databricks output
        run: |
          run_id=${{ steps.wait_pipeline.outputs.run_id }}
          echo "Fetching Databricks notebook output from pipeline run: $run_id"

          # Get pipeline run start and end times
          pipeline_info=$(az datafactory pipeline-run show \
            --factory-name ${{ secrets.ADF_NAME }} \
            --resource-group ${{ secrets.ADF_RESOURCE_GROUP }} \
            --run-id $run_id \
            --output json)

          start_time=$(echo "$pipeline_info" | jq -r '.runStart')
          end_time=$(echo "$pipeline_info" | jq -r '.runEnd')

          echo "Pipeline started at: $start_time"
          echo "Pipeline ended at: $end_time"

          # Query activity run output within that time range
          activity_output=$(az datafactory activity-run query-by-pipeline-run \
            --factory-name ${{ secrets.ADF_NAME }} \
            --resource-group ${{ secrets.ADF_RESOURCE_GROUP }} \
            --pipeline-run-id $run_id \
            --last-updated-after "$start_time" \
            --last-updated-before "$end_time" \
            --output json)

          echo "Raw activity run output:"
          echo "$activity_output" | jq '.'

          # Extract notebook output from the Databricks activity
          notebook_output=$(echo "$activity_output" | jq -r '.value[] | select(.activityName == "RunDatabricksNotebook") | .output.runOutput')

          echo "Databricks Notebook Output:"
          echo "$notebook_output" | jq '.'
